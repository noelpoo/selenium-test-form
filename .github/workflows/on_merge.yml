name: on-merge

on:
  push:
    branches: [develop]

jobs:
  build-and-deploy:
    name: Build & Deploy Frontend (Mock)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to test environment (Mock)
        run: |
          echo "Simulating deployment to https://test.dev.com"
          echo "Deploying..."
          sleep 10

  run-selenium-tests:
    name: Run Selenium Tests in ${{ matrix.browser }}
    runs-on: ubuntu-latest
    needs: build-and-deploy

    strategy:
      matrix:
        browser: [chrome, edge]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Install browsers
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            google-chrome-stable \
            firefox \
            microsoft-edge-stable 

      - name: Run Selenium tests with ${{ matrix.browser }}
        env:
          BASE_URL: "${{ secrets.BASE_URL }}"
        run: |
          source venv/bin/activate
          pytest tests --browser=${{ matrix.browser }} --html=report-${{ matrix.browser }}.html --self-contained-html

      - name: Upload test report
        if: always()
        uses: actions/upload-artifact@v4.6.2
        with:
          name: selenium-report-${{ matrix.browser }}
          path: report-${{ matrix.browser }}.html

  deploy-report:
    name: Deploy Reports to GitHub Pages
    runs-on: ubuntu-latest
    needs: run-selenium-tests

    if: always()

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Download all test reports
        uses: actions/download-artifact@v4
        with:
          path: report-artifacts

      - name: Prepare report directory
        run: |
          mkdir -p gh-pages
          cp report-artifacts/selenium-report-chrome/report-chrome.html gh-pages/report.html
          cp report-artifacts/selenium-report-edge/report-edge.html gh-pages/report-edge.html

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.BOT_PAT }}
          publish_dir: gh-pages
          publish_branch: gh-pages
